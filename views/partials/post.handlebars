{{! Partial for a single post }}
<div class="post flex gap full">
    <div class="post-avatar">
        <img src="/avatar/{{username}}" width="75px" height="75px">
    </div>
    <div class="post-content preserve-newlines">
       <p>{{title}}</p>
       <p>{{content}}</p>
       <div class="bar"></div>
        <div class="post-status-bar flex gap-sm align-center">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            <button class="like-btn" onclick="handleLikeClick()">♥</button>
            <p>{{likes}} likes</p>
            <p>Posted by {{username}} on {{timestamp}}</p>
        </div>        
    </div>
</div>
<script>

    function handleLikeClick(event) {
        //const postId = event.target.getAttribute('data-id');
        

        const posts      
    }

    function handleDeleteClick(event) {
        {{!-- const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // Implement the functionality to handle the delete action, potentially using fetch to send a request to the server
        fetch(`/delete/${postId}`, {
            method: 'POST'
        }).then(response => {
            if (response.ok) {
                // Handle the response, e.g., remove the post from the UI
                console.log('Post deleted successfully');
                // You might need to refresh the post list or remove the post element from the DOM
                buttonElement.closest('.post').remove();
            } else {
                console.error('Failed to delete post');
            }
        }); --}}
    }
</script>
